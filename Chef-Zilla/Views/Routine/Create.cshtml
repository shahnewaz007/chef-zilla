@using Chef_Zilla.Models
@model Chef_Zilla.ViewModels.RoutineCreateViewModel

@{
    ViewBag.Title = "Routine Create";
}
@{
    List<Box> BoxList = (List<Box>)(Session["BoxList"]);
    List<int> TotalPriceList = (List<int>)(Session["TotalPriceList"]);
    var BoxSelectID = Session["BoxSelectID"];
}
@Html.Partial("~/Views/Shared/_NavBar.cshtml")
<br>
<br>
<br>
<div class="container-fluid mt-5">
    <div class="row text-center">
        <div class="col-12">
            <img style="width: 80%;" src="~/Images/Group 40.png" alt="">
        </div>
    </div>
</div>
<br>
<br>
<br>
<div class="container mt-5">
    <div class="row">
        <h2 class="font-weight-bold mx-auto">Create Food Routine</h2>
    </div>
    <div class="row mt-5">
        <div class="col-8 offset-2">
            <h5 class="font-weight-bold">Routine Information</h5>
        </div>
    </div>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row mt-4">
            <div class=" md-form col-md-3 offset-md-2 col-8 offset-2">
                @Html.EditorFor(model => model.RoutineName, new { htmlAttributes = new { @class = "form-control", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3;" } })
                @Html.ValidationMessageFor(model => model.RoutineName, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.RoutineName, htmlAttributes: new { @class = "control-label ml-2 routineLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
            <div class="col-md-3 offset-md-1 col-8 offset-2">
                <select class="form-control custom-select" name="BoxID" id="BoxID" style="border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; color: #b30000; font-weight: 400">
                    @for (int i = 0; i < BoxList.Count; i++)
                    {
                        <option value="@BoxList[i].BoxID" selected="@BoxList[i].BoxID.Equals(@BoxSelectID)">@BoxList[i].BoxName</option>
                    }
                </select>
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="row mt-4">
            <div class=" md-form col-md-3 offset-md-2 col-8 offset-2">
                @Html.DropDownListFor(model => model.RoutineType, new List<SelectListItem>
                {
                    new SelectListItem() {Text = "Daily", Value = "Daily"},
                    new SelectListItem() {Text = "Weekly", Value = "Weekly"},
                    new SelectListItem() {Text = "Monthly", Value = "Monthly"}
                }, "Routine Type", new { @class = "form-control custom-select", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; color: #b30000; font-weight: 400" })
                @Html.ValidationMessageFor(model => model.RoutineType, "", new { @class = "text-danger" })
            </div>
            <div class="md-form col-md-3 offset-md-1 col-8 offset-2" id="deliveryMonthDiv">
                @Html.TextBoxFor(model => model.DeliveryDate, new { htmlAttributes = new { @readonly = "readonly"} })
                @Html.LabelFor(model => model.DeliveryDate, htmlAttributes: new { @class = "control-label ml-2 deliveryDateLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="row mt-5" id="deliveryWeekDiv">
            <div class="col-2"></div>
            <div class="col-1">
                <input type="checkbox" class="d-none" id="Saturday" name="DeliveryDay" value="Saturday">
                <label class="days" for="Saturday">Sa</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Sunday" name="DeliveryDay" value="Sunday">
                <label class="days" for="Sunday">Su</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Monday" name="DeliveryDay" value="Monday">
                <label class="days" for="Monday">Mo</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Tuesday" name="DeliveryDay" value="Tuesday">
                <label class="days" for="Tuesday">Tu</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Wednesday" name="DeliveryDay" value="Wednesday">
                <label class="days" for="Wednesday">We</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Thursday" name="DeliveryDay" value="Thursday">
                <label class="days" for="Thursday">Th</label>
            </div>
            <div class="col-1 ml-3">
                <input type="checkbox" class="d-none" id="Friday" name="DeliveryDay" value="Friday">
                <label class="days" for="Friday">Fr</label>
            </div>
        </div>
        <br><br>
        <div class="row mt-5">
            <div class="col-8 offset-2">
                <h5 class="font-weight-bold">Routine Information</h5>
            </div>
        </div>

        <div class="row mt-4">
            <div class=" md-form col-md-3 offset-md-2 col-8 offset-2">
                @Html.EditorFor(model => model.CustomerName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; background: transparent" } })
                @Html.ValidationMessageFor(model => model.CustomerName, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustomerName, htmlAttributes: new { @class = "control-label ml-2 customerNameLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>

            <div class=" md-form col-md-3 offset-md-1 col-8 offset-2">
                @Html.EditorFor(model => model.CustomerEmail, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; background: transparent" } })
                @Html.ValidationMessageFor(model => model.CustomerEmail, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustomerEmail, htmlAttributes: new { @class = "control-label ml-2 customerEmailLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
            <div class="col-md-3"></div>
        </div>

        <div class="row mt-4">
            <div class=" md-form col-md-3 offset-md-2 col-8 offset-2">
                @Html.EditorFor(model => model.CustomerPhone, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; background: transparent" } })
                @Html.ValidationMessageFor(model => model.CustomerPhone, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.CustomerPhone, htmlAttributes: new { @class = "control-label ml-2 customerPhoneLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
            <div class=" md-form col-md-3 offset-md-1 col-8 offset-2">
                @Html.EditorFor(model => model.DeliveryAddress, new { htmlAttributes = new { @class = "form-control", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3;" } })
                @Html.ValidationMessageFor(model => model.DeliveryAddress, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.DeliveryAddress, htmlAttributes: new { @class = "control-label ml-2 deliveryAddressLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
            <div class="col-md-3"></div>
        </div>
        <div class="row mt-4">
            <div class=" md-form col-md-3 offset-md-2 col-8 offset-2">
                @Html.EditorFor(model => model.TotalPrice, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly", @style = "border: none; border-radius: 0px; border-bottom: 1.2px solid #b3b3b3; background: transparent" } })
                @Html.ValidationMessageFor(model => model.TotalPrice, "", new { @class = "text-danger" })
                @Html.LabelFor(model => model.TotalPrice, htmlAttributes: new { @class = "control-label ml-2 totalPriceLabel position-absolute", @style = "color: #b30000; font-weight: 400; left: 25px; top: 5px" })
            </div>
        </div>
        for (int i = 0; i < TotalPriceList.Count; i++)
        {
            <input type="text" class="d-none" id="TotalPriceList@(i)" value="@TotalPriceList[i]">
        }
        <div class="row text-center mt-5">
            <div class="col-md-12">
                <button type="submit" id="submitButton" class="buttonCss">Create</button>
            </div>
        </div>
    }
</div>
@Html.Partial("~/Views/Shared/_Footer.cshtml")
@section Scripts {
    @Scripts.Render("~/bundles/jqueryui")
    @Styles.Render("~/Content/cssjquerryUi")
    <script>
            $(document).ready(function () {
                $("#DeliveryDate").addClass("form-control deliveryDateClass");
                document.getElementById('DeliveryDate').readOnly = true;

                var dates = new Array();

                $("#BoxID").change(function (e) {
                    document.getElementById("TotalPrice").value = document.getElementById("TotalPriceList" + e.target.selectedIndex).value;
                });

                $("#RoutineType").change(function () {
                    var e = document.getElementById("RoutineType");
                    if (e.options[e.selectedIndex].value === "Daily") {
                        document.getElementById("deliveryWeekDiv").classList.add('d-none');
                        document.getElementById("deliveryMonthDiv").classList.add('d-none');
                    } else if (e.options[e.selectedIndex].value === "Weekly") {
                        document.getElementById("deliveryWeekDiv").classList.remove('d-none');
                        document.getElementById("deliveryMonthDiv").classList.add('d-none');
                    } else if (e.options[e.selectedIndex].value === "Monthly") {
                        document.getElementById("deliveryMonthDiv").classList.remove('d-none');
                        document.getElementById("deliveryWeekDiv").classList.add('d-none');
                    } else {
                        document.getElementById("deliveryWeekDiv").classList.add('d-none');
                        document.getElementById("deliveryMonthDiv").classList.add('d-none');
                    }
                });

                function addDate(date) {
                    if (jQuery.inArray(date, dates) < 0) {
                        dates.push(date);
                        console.log(dates);
                        document.getElementById("DeliveryDate").value = dates;
                    }
                }

                function removeDate(index) {
                    dates.splice(index, 1);
                    console.log(dates);
                    document.getElementById("DeliveryDate").value = dates;
                }

                function addOrRemoveDate(date) {
                    var index = jQuery.inArray(date, dates);
                    if (index >= 0)
                        removeDate(index);
                    else
                        addDate(date);
                }

                function padNumber(number) {
                    var ret = new String(number);
                    if (ret.length == 1)
                        ret = "0" + ret;
                    return ret;
                }

                $('#DeliveryDate').datepicker({
                    dateFormat: 'mm/dd/yy',
                    stepMonths: 0,
                    onSelect: function(dateText, inst) {
                        addOrRemoveDate(dateText);
                    },
                    beforeShowDay: function (date) {
                        var year = date.getFullYear();
                        var month = padNumber(date.getMonth() + 1);
                        var day = padNumber(date.getDate());

                        var dateString = month + "/" + day + "/" + year;
                        var gotDate = jQuery.inArray(dateString, dates);
                        if (gotDate >= 0) {
                            return [true, "ui-state-highlight"];
                        }
                        return [true, ""];
                    }
                });

                $("#RoutineName").focus(function() {
                    $(".routineLabel").animate({ "top": '-25px' }, 100);
                });

                $("#DeliveryDate").focus(function() {
                    $(".deliveryDateLabel").animate({ "top": '-25px' }, 100);
                });

                $("#CustomerName").focus(function() {
                    $(".customerNameLabel").animate({ "top": '-25px' }, 100);
                });

                $("#CustomerEmail").focus(function() {
                    $(".customerEmailLabel").animate({ "top": '-25px' }, 100);
                });

                $("#CustomerPhone").focus(function() {
                    $(".customerPhoneLabel").animate({ "top": '-25px' }, 100);
                });

                $("#DeliveryAddress").focus(function() {
                    $(".deliveryAddressLabel").animate({ "top": '-25px' }, 100);
                });

                $("#TotalPrice").focus(function() {
                    $(".totalPriceLabel").animate({ "top": '-25px' }, 100);
                });

                $('#RoutineName').blur(function() {
                    if (!$(this).val()) {
                        $(".routineLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#DeliveryDate').blur(function() {
                    if (!$(this).val()) {
                        $(".deliveryDateLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#CustomerName').blur(function() {
                    if (!$(this).val()) {
                        $(".customerNameLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#CustomerEmail').blur(function() {
                    if (!$(this).val()) {
                        $(".customerEmailLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#CustomerPhone').blur(function() {
                    if (!$(this).val()) {
                        $(".customerPhoneLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#DeliveryAddress').blur(function() {
                    if (!$(this).val()) {
                        $(".deliveryAddressLabel").animate({ "top": '5px' }, 100);
                    }
                });

                $('#TotalPrice').blur(function() {
                    if (!$(this).val()) {
                        $(".totalPriceLabel").animate({ "top": '5px' }, 100);
                    }
                });

                if (document.getElementById("RoutineName").value) {
                    $(".routineLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("DeliveryDate").value) {
                    $(".deliveryDateLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("CustomerName").value) {
                    $(".customerNameLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("CustomerEmail").value) {
                    $(".customerEmailLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("CustomerPhone").value) {
                    $(".customerPhoneLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("DeliveryAddress").value) {
                    $(".deliveryAddressLabel").animate({ "top": '-25px' }, 100);
                }

                if (document.getElementById("TotalPrice").value) {
                    $(".totalPriceLabel").animate({ "top": '-25px' }, 100);
                }
            })
    </script>
    @Scripts.Render("~/bundles/jqueryval")
}
